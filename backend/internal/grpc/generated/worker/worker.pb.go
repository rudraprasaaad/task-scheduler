// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/worker/worker.proto

package worker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Worker struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status             string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Address            string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	LastSeen           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	TasksRun           int32                  `protobuf:"varint,5,opt,name=tasks_run,json=tasksRun,proto3" json:"tasks_run,omitempty"`
	MaxConcurrentTasks int32                  `protobuf:"varint,6,opt,name=max_concurrent_tasks,json=maxConcurrentTasks,proto3" json:"max_concurrent_tasks,omitempty"`
	CurrentTasks       int32                  `protobuf:"varint,7,opt,name=current_tasks,json=currentTasks,proto3" json:"current_tasks,omitempty"`
	Metadata           map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Worker) Reset() {
	*x = Worker{}
	mi := &file_proto_worker_worker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Worker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Worker) ProtoMessage() {}

func (x *Worker) ProtoReflect() protoreflect.Message {
	mi := &file_proto_worker_worker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Worker.ProtoReflect.Descriptor instead.
func (*Worker) Descriptor() ([]byte, []int) {
	return file_proto_worker_worker_proto_rawDescGZIP(), []int{0}
}

func (x *Worker) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Worker) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Worker) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Worker) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *Worker) GetTasksRun() int32 {
	if x != nil {
		return x.TasksRun
	}
	return 0
}

func (x *Worker) GetMaxConcurrentTasks() int32 {
	if x != nil {
		return x.MaxConcurrentTasks
	}
	return 0
}

func (x *Worker) GetCurrentTasks() int32 {
	if x != nil {
		return x.CurrentTasks
	}
	return 0
}

func (x *Worker) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_proto_worker_worker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_worker_worker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_worker_worker_proto_rawDescGZIP(), []int{1}
}

func (x *HealthRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_worker_worker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_worker_worker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_worker_worker_proto_rawDescGZIP(), []int{2}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HealthResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

type RegisterWorkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Worker        *Worker                `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerRequest) Reset() {
	*x = RegisterWorkerRequest{}
	mi := &file_proto_worker_worker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerRequest) ProtoMessage() {}

func (x *RegisterWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_worker_worker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerRequest.ProtoReflect.Descriptor instead.
func (*RegisterWorkerRequest) Descriptor() ([]byte, []int) {
	return file_proto_worker_worker_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterWorkerRequest) GetWorker() *Worker {
	if x != nil {
		return x.Worker
	}
	return nil
}

type RegisterWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageId     string                 `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerResponse) Reset() {
	*x = RegisterWorkerResponse{}
	mi := &file_proto_worker_worker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerResponse) ProtoMessage() {}

func (x *RegisterWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_worker_worker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkerResponse) Descriptor() ([]byte, []int) {
	return file_proto_worker_worker_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterWorkerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterWorkerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterWorkerResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	CurrentTasks  int32                  `protobuf:"varint,3,opt,name=current_tasks,json=currentTasks,proto3" json:"current_tasks,omitempty"`
	Metrics       map[string]string      `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_worker_worker_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_worker_worker_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_worker_worker_proto_rawDescGZIP(), []int{5}
}

func (x *HeartbeatRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *HeartbeatRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HeartbeatRequest) GetCurrentTasks() int32 {
	if x != nil {
		return x.CurrentTasks
	}
	return 0
}

func (x *HeartbeatRequest) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acknowledged  bool                   `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	Instructions  map[string]string      `protobuf:"bytes,2,rep,name=instructions,proto3" json:"instructions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_worker_worker_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_worker_worker_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_worker_worker_proto_rawDescGZIP(), []int{6}
}

func (x *HeartbeatResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *HeartbeatResponse) GetInstructions() map[string]string {
	if x != nil {
		return x.Instructions
	}
	return nil
}

type GetWorkersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusFilter  string                 `protobuf:"bytes,1,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkersRequest) Reset() {
	*x = GetWorkersRequest{}
	mi := &file_proto_worker_worker_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkersRequest) ProtoMessage() {}

func (x *GetWorkersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_worker_worker_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkersRequest.ProtoReflect.Descriptor instead.
func (*GetWorkersRequest) Descriptor() ([]byte, []int) {
	return file_proto_worker_worker_proto_rawDescGZIP(), []int{7}
}

func (x *GetWorkersRequest) GetStatusFilter() string {
	if x != nil {
		return x.StatusFilter
	}
	return ""
}

type GetWorkersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workers       []*Worker              `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkersResponse) Reset() {
	*x = GetWorkersResponse{}
	mi := &file_proto_worker_worker_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkersResponse) ProtoMessage() {}

func (x *GetWorkersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_worker_worker_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkersResponse.ProtoReflect.Descriptor instead.
func (*GetWorkersResponse) Descriptor() ([]byte, []int) {
	return file_proto_worker_worker_proto_rawDescGZIP(), []int{8}
}

func (x *GetWorkersResponse) GetWorkers() []*Worker {
	if x != nil {
		return x.Workers
	}
	return nil
}

var File_proto_worker_worker_proto protoreflect.FileDescriptor

const file_proto_worker_worker_proto_rawDesc = "" +
	"\n" +
	"\x19proto/worker/worker.proto\x12\tworker.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf1\x02\n" +
	"\x06Worker\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x127\n" +
	"\tlast_seen\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12\x1b\n" +
	"\ttasks_run\x18\x05 \x01(\x05R\btasksRun\x120\n" +
	"\x14max_concurrent_tasks\x18\x06 \x01(\x05R\x12maxConcurrentTasks\x12#\n" +
	"\rcurrent_tasks\x18\a \x01(\x05R\fcurrentTasks\x12;\n" +
	"\bmetadata\x18\b \x03(\v2\x1f.worker.v1.Worker.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\",\n" +
	"\rHealthRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\"\xe0\x01\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12@\n" +
	"\adetails\x18\x03 \x03(\v2&.worker.v1.HealthResponse.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"B\n" +
	"\x15RegisterWorkerRequest\x12)\n" +
	"\x06worker\x18\x01 \x01(\v2\x11.worker.v1.WorkerR\x06worker\"k\n" +
	"\x16RegisterWorkerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\tR\tmessageId\"\xec\x01\n" +
	"\x10HeartbeatRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12#\n" +
	"\rcurrent_tasks\x18\x03 \x01(\x05R\fcurrentTasks\x12B\n" +
	"\ametrics\x18\x04 \x03(\v2(.worker.v1.HeartbeatRequest.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcc\x01\n" +
	"\x11HeartbeatResponse\x12\"\n" +
	"\facknowledged\x18\x01 \x01(\bR\facknowledged\x12R\n" +
	"\finstructions\x18\x02 \x03(\v2..worker.v1.HeartbeatResponse.InstructionsEntryR\finstructions\x1a?\n" +
	"\x11InstructionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"8\n" +
	"\x11GetWorkersRequest\x12#\n" +
	"\rstatus_filter\x18\x01 \x01(\tR\fstatusFilter\"A\n" +
	"\x12GetWorkersResponse\x12+\n" +
	"\aworkers\x18\x01 \x03(\v2\x11.worker.v1.WorkerR\aworkers2\x8e\x03\n" +
	"\rWorkerService\x12U\n" +
	"\x0eRegisterWorker\x12 .worker.v1.RegisterWorkerRequest\x1a!.worker.v1.RegisterWorkerResponse\x12F\n" +
	"\tHeartbeat\x12\x1b.worker.v1.HeartbeatRequest\x1a\x1c.worker.v1.HeartbeatResponse\x12B\n" +
	"\vHealthCheck\x12\x18.worker.v1.HealthRequest\x1a\x19.worker.v1.HealthResponse\x12I\n" +
	"\n" +
	"GetWorkers\x12\x1c.worker.v1.GetWorkersRequest\x1a\x1d.worker.v1.GetWorkersResponse\x12O\n" +
	"\x10StreamHeartbeats\x12\x1b.worker.v1.HeartbeatRequest\x1a\x1c.worker.v1.HeartbeatResponse0\x01BHZFgithub.com/rudraprasaaad/task-scheduler/internal/grpc/generated/workerb\x06proto3"

var (
	file_proto_worker_worker_proto_rawDescOnce sync.Once
	file_proto_worker_worker_proto_rawDescData []byte
)

func file_proto_worker_worker_proto_rawDescGZIP() []byte {
	file_proto_worker_worker_proto_rawDescOnce.Do(func() {
		file_proto_worker_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_worker_worker_proto_rawDesc), len(file_proto_worker_worker_proto_rawDesc)))
	})
	return file_proto_worker_worker_proto_rawDescData
}

var file_proto_worker_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_worker_worker_proto_goTypes = []any{
	(*Worker)(nil),                 // 0: worker.v1.Worker
	(*HealthRequest)(nil),          // 1: worker.v1.HealthRequest
	(*HealthResponse)(nil),         // 2: worker.v1.HealthResponse
	(*RegisterWorkerRequest)(nil),  // 3: worker.v1.RegisterWorkerRequest
	(*RegisterWorkerResponse)(nil), // 4: worker.v1.RegisterWorkerResponse
	(*HeartbeatRequest)(nil),       // 5: worker.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),      // 6: worker.v1.HeartbeatResponse
	(*GetWorkersRequest)(nil),      // 7: worker.v1.GetWorkersRequest
	(*GetWorkersResponse)(nil),     // 8: worker.v1.GetWorkersResponse
	nil,                            // 9: worker.v1.Worker.MetadataEntry
	nil,                            // 10: worker.v1.HealthResponse.DetailsEntry
	nil,                            // 11: worker.v1.HeartbeatRequest.MetricsEntry
	nil,                            // 12: worker.v1.HeartbeatResponse.InstructionsEntry
	(*timestamppb.Timestamp)(nil),  // 13: google.protobuf.Timestamp
}
var file_proto_worker_worker_proto_depIdxs = []int32{
	13, // 0: worker.v1.Worker.last_seen:type_name -> google.protobuf.Timestamp
	9,  // 1: worker.v1.Worker.metadata:type_name -> worker.v1.Worker.MetadataEntry
	13, // 2: worker.v1.HealthResponse.timestamp:type_name -> google.protobuf.Timestamp
	10, // 3: worker.v1.HealthResponse.details:type_name -> worker.v1.HealthResponse.DetailsEntry
	0,  // 4: worker.v1.RegisterWorkerRequest.worker:type_name -> worker.v1.Worker
	11, // 5: worker.v1.HeartbeatRequest.metrics:type_name -> worker.v1.HeartbeatRequest.MetricsEntry
	12, // 6: worker.v1.HeartbeatResponse.instructions:type_name -> worker.v1.HeartbeatResponse.InstructionsEntry
	0,  // 7: worker.v1.GetWorkersResponse.workers:type_name -> worker.v1.Worker
	3,  // 8: worker.v1.WorkerService.RegisterWorker:input_type -> worker.v1.RegisterWorkerRequest
	5,  // 9: worker.v1.WorkerService.Heartbeat:input_type -> worker.v1.HeartbeatRequest
	1,  // 10: worker.v1.WorkerService.HealthCheck:input_type -> worker.v1.HealthRequest
	7,  // 11: worker.v1.WorkerService.GetWorkers:input_type -> worker.v1.GetWorkersRequest
	5,  // 12: worker.v1.WorkerService.StreamHeartbeats:input_type -> worker.v1.HeartbeatRequest
	4,  // 13: worker.v1.WorkerService.RegisterWorker:output_type -> worker.v1.RegisterWorkerResponse
	6,  // 14: worker.v1.WorkerService.Heartbeat:output_type -> worker.v1.HeartbeatResponse
	2,  // 15: worker.v1.WorkerService.HealthCheck:output_type -> worker.v1.HealthResponse
	8,  // 16: worker.v1.WorkerService.GetWorkers:output_type -> worker.v1.GetWorkersResponse
	6,  // 17: worker.v1.WorkerService.StreamHeartbeats:output_type -> worker.v1.HeartbeatResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_worker_worker_proto_init() }
func file_proto_worker_worker_proto_init() {
	if File_proto_worker_worker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_worker_worker_proto_rawDesc), len(file_proto_worker_worker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_worker_worker_proto_goTypes,
		DependencyIndexes: file_proto_worker_worker_proto_depIdxs,
		MessageInfos:      file_proto_worker_worker_proto_msgTypes,
	}.Build()
	File_proto_worker_worker_proto = out.File
	file_proto_worker_worker_proto_goTypes = nil
	file_proto_worker_worker_proto_depIdxs = nil
}
